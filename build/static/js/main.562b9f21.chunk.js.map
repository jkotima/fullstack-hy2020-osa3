{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deletePerson","name","number","onClick","Persons","persons","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","notification","error","className","message","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","setNotification","useEffect","personService","initialPersons","setTimedNotification","setTimeout","personsToShow","toUpperCase","includes","event","target","preventDefault","personObject","window","confirm","find","n","returnedPerson","catch","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.562b9f21.chunk.js","sourcesContent":["import React from 'react'\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with:\n            <input \n            value={props.value}\n            onChange={props.onChange}\n            />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n          <div>\n            name:\n            <input \n             value={props.newName}\n             onChange={props.handleNameChange}\n            />\n            <br />\n            number:\n            <input \n             value={props.newNumber}\n             onChange={props.handleNumberChange}\n            />\n          </div>\n\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\nconst Person = ({ person, deletePerson}) => {\n    return (\n      <p>\n        {person.name} {person.number} <button onClick={deletePerson}>delete</button>\n      </p>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, deletePerson}) => {\n    return (\n        <div>\n            {persons.map((person) =>\n                <Person key={person.name}\n                person={person}\n                deletePerson = {() => deletePerson(person.id)}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst destroy = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, destroy, update }\n","import React from 'react'\n\nconst Notification = ({notification}) => {\n    if (notification === null) {\n      return null\n    }\n\n    if (notification.error) {\n        return (\n            <div className=\"error\">\n              {notification.message}\n            </div>\n        )     \n    }\n    \n    return (\n      <div className=\"notification\">\n        {notification.message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, {useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ notification, setNotification ] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const setTimedNotification = (message, error=false) => {\n        setNotification({message, error})\n        setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber\n        } \n\n        if (persons.map((person) => person.name).includes(newName)) {\n            if (!window.confirm(`${newName} is already added to phonebook, `\n                               +`replace old number with a new one?`)) {\n                return\n            }\n\n            const id = persons.find(n => n.name === newName).id\n            personService\n                .update(id, personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.map(person => \n                        person.id !== id ? person : returnedPerson))\n                        setTimedNotification(`Updated ${personObject.name}`)\n                }).catch(error => {\n                    setTimedNotification(`Information of ${personObject.name} `+\n                                         `has already been removed from server`\n                                         , error=true)\n                })\n\n        } else {\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setTimedNotification(`Added ${personObject.name}`)\n                })\n                .catch(error => {\n                    setTimedNotification(error.response.data.error, error=true)\n                })\n        }\n    }\n    const deletePerson = id => {\n        const person = persons.find(n => n.id === id)\n        if (!window.confirm(`Delete ${person.name}?`)) {\n            return\n        }\n\n        personService\n            .destroy(id)\n            .then(returnedPerson => {\n                setPersons(persons.filter(n => n.id !== id))\n            }).catch(error => {\n                alert(\n                    `Person ${person.name} could not be deleted`\n                )\n            })\n        setTimedNotification(`Deleted ${person.name}`) \n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const personsToShow = persons.filter(person => \n        person.name.toUpperCase().includes(filter.toUpperCase())\n    )\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Notification notification={notification}/>\n\n        <Filter value={filter} onChange={handleFilterChange}/>\n\n        <h2>Add a new</h2>\n        <PersonForm \n            addPerson={addPerson}\n            newName={newName}\n            newNumber={newNumber}\n            handleNameChange={handleNameChange}\n            handleNumberChange={handleNumberChange}\n        />\n\n        <h2>Numbers</h2>\n        <Persons persons={personsToShow} deletePerson={deletePerson}/>\n      </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}